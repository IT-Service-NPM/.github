# https://github.com/github/safe-settings/blob/main-enterprise/docs/sample-settings/settings.yml

repository:
  # Settings for Code security and analysis
  # Dependabot Alerts
  security:
    enableVulnerabilityAlerts: true
    enableAutomatedSecurityFixes: true

  # Either `true` to make the repository private, or `false` to make it public.
  # If this value is changed and if org members cannot change the visibility of repos
  # it would result in an error when updating a repo
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # The default branch for this repository.
  default_branch: main

  # Desired language or platform [.gitignore template](https://github.com/github/gitignore)
  # to apply. Use the name of the template without the extension.
  # For example, "Haskell".
  gitignore_template: Node

  # Choose an [open source license template](https://choosealicense.com/)
  # that best suits your needs, and then use the
  # [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type)
  # as the `license_template` string. For example, "mit" or "mpl-2.0".
  # license_template: mit

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests,
  # or `false` to disallow auto-merge.
  # Default: `false`
  allow_auto_merge: true

  # Either `true` to allow automatically deleting head branches
  # when pull requests are merged, or `false` to prevent automatic deletion.
  # Default: `false`
  delete_branch_on_merge: true

  # Either `true` to  allow update branch on pull requests,
  # or `false` to disallow update branch.
  # Default: `false`
  allow_update_branch: true

  # Whether to archive this repository. false will unarchive a previously archived repository.
  archived: false

# Teams
# See https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#create-a-team for available options
teams:
  # The permission to grant the team. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  - name: maintainers
    permission: maintain

# Branch protection rules
# See https://docs.github.com/en/rest/branches/branch-protection?apiVersion=2022-11-28#update-branch-protection for available options
branches:
  # If the name of the branch value is specified as `default`, then the app will create a branch protection rule to apply against the default branch in the repo
  - name: default

    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Whether the most recent reviewable push must be approved by someone other than the person who pushed it.
        require_last_push_approval: true
        # Allow specific users, teams, or apps to bypass pull request requirements. Set to null to disable.
        bypass_pull_request_allowances:
          teams: [maintainers]
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          teams: [maintainers]

      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        # contexts: []

      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
